/** \page afs_search AFS search API
 *
 * \tableofcontents
 *
 * \section as_introduction Introduction
 *
 * This API greatly simplifies querying of Antidot search engine.
 * Only one class needs to be instanciated.
 *
 *
 * \section as_connector AFS search initialization
 *
 * Instance of @a AfsSearch is initialized with host name hosting AFS search
 * service and the service identifier (id and status which is set to @c stable
 * by default).
 *
 * Specific search URL is provided by production team and should be similar to
 * <tt>%http://your_company.afs-antidot.net/search</tt>
 *
 * Along with the search URL, a service number and service status should also
 * have been provided. These informations are used to initialized the instance
 * of @a AfsSearch. Production services are not modified in place so their
 * status are usually @c stable.
 *
 * Here an example to initialize an AFS search object:
 * @snippet full_lightweight_example.php Search init
 *
 * Once the object is initialized, query can be submitted by calling
 * AfsSearch::execute method.
 *
 *
 * \section as_query_init Query initialization
 *
 * Here a summarize of the query usages:
 * - The query object should be initialized with initial query: this can be done
 * by using URL parameters.
 * - New query should be generated for each link in the HTML generated page:
 * each query is generated by modifying current one.
 *
 * If the query should be initialized with URL parameters, this can be done as
 * following:
 * @snippet full_lightweight_example.php Query init
 *
 * Otherwise, you can define initial query and set it with AfsSearch::set_query.
 *
 *
 * \section as_query_execute Query AFS search engine
 *
 * Once the query is initialized, AFS search engine can be queried as following:
 * @snippet full_lightweight_example.php Query execution
 *
 * Default result is formatted as @c array. Alternate result format is available
 * see AfsSearch::execute for more details.
 *
 *
 * \section as_facet_manager Facets management (optional)
 *
 * Facets can be declared and configured by instantiating @a AfsFacet. But, if
 * no specific configuration is necessary, facets are deduced from the reply of
 * AFS search engine.
 *
 * Example of declaration:
 * \code
$search->add_facet(new AfsFacet('FacetId', AfsFacetType::STRING_TYPE, AfsFacetLayout::TREE);\endcode
 *
 *
 */
